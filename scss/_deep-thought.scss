.deep-thought {
  display: inline-block;
  position: relative;
  padding-top: 0.5em;

  // https://css-generators.com/tooltip-speech-bubble/
  .speech-bubble {
    --angle: 90deg;
    --height: 1em;
    --position: 0%; /* triangle position (0%:left 100%:right) */
    --radius: 1.2em;
    --border-width: 5px;
    --border-colour: black;
    --background-colour: white;

    padding: 1em;
    border-radius: var(--radius) var(--radius)
      min(
        var(--radius),
        100% - var(--position) - var(--height) * tan(var(--angle) / 2)
      )
      min(
        var(--radius),
        var(--position) - var(--height) * tan(var(--angle) / 2)
      ) / var(--radius);
    clip-path: polygon(
      0 100%,
      0 0,
      100% 0,
      100% 100%,
      min(100%, var(--position) + var(--height) * tan(var(--angle) / 2)) 100%,
      var(--position) calc(100% + var(--height)),
      max(0%, var(--position) - var(--height) * tan(var(--angle) / 2)) 100%
    );
    background: var(--border-colour);
    border-image: conic-gradient(var(--border-colour) 0 0) fill 0 /
      var(--radius)
      max(0%, 100% - var(--position) - var(--height) * tan(var(--angle) / 2)) 0
      max(0%, var(--position) - var(--height) * tan(var(--angle) / 2)) / 0 0
      var(--height) 0;
    position: absolute;
    right: -0.25em;
    top: -0.25em;

    &::before {
      content: '';
      position: absolute;
      z-index: -1;
      inset: 0;
      padding: var(--border-width);
      border-radius: inherit;
      clip-path: polygon(
        0 100%,
        0 0,
        100% 0,
        100% 100%,
        min(
            100% - var(--border-width),
            var(--position) + var(--height) * tan(var(--angle) / 2) - var(
                --border-width
              ) * tan(45deg - var(--angle) / 4)
          )
          calc(100% - var(--border-width)),
        var(--position)
          calc(
            100% + var(--height) - var(--border-width) / sin(var(--angle) / 2)
          ),
        max(
            var(--border-width),
            var(--position) - var(--height) * tan(var(--angle) / 2) +
              var(--border-width) * tan(45deg - var(--angle) / 4)
          )
          calc(100% - var(--border-width))
      );
      background: var(--background-colour) content-box;
      border-image: conic-gradient(var(--background-colour) 0 0) fill 0 /
        var(--radius)
        max(
          var(--border-width),
          100% - var(--position) - var(--height) * tan(var(--angle) / 2)
        )
        0
        max(
          var(--border-width),
          var(--position) - var(--height) * tan(var(--angle) / 2)
        ) / 0 0 var(--height) 0;
    }
  }
}
